[{"C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\index.js":"1","C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\App.js":"2","C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\components\\chess.jsx":"3","C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\components\\board.jsx":"4","C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\components\\square.jsx":"5","C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\contexts\\KnightPlacedContext.js":"6","C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\contexts\\KnightPosContext.js":"7","C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\contexts\\DestinationSelContext.js":"8","C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\contexts\\DestPosContext.js":"9","C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\constants.js":"10"},{"size":219,"mtime":1608434338973,"results":"11","hashOfConfig":"12"},{"size":1248,"mtime":1610685440560,"results":"13","hashOfConfig":"12"},{"size":342,"mtime":1609203501982,"results":"14","hashOfConfig":"12"},{"size":4227,"mtime":1611191335383,"results":"15","hashOfConfig":"12"},{"size":1724,"mtime":1611190843724,"results":"16","hashOfConfig":"12"},{"size":166,"mtime":1610129130347,"results":"17","hashOfConfig":"12"},{"size":160,"mtime":1610569591150,"results":"18","hashOfConfig":"12"},{"size":170,"mtime":1610684949674,"results":"19","hashOfConfig":"12"},{"size":156,"mtime":1610685264339,"results":"20","hashOfConfig":"12"},{"size":1012,"mtime":1611182657448,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"111l1om",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\index.js",[],["47","48"],"C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\App.js",["49","50","51"],"import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Switch, Redirect, Route } from 'react-router-dom';\nimport KnightPlacedContext from './contexts/KnightPlacedContext';\nimport KnightPosContext from './contexts/KnightPosContext';\nimport DestinationSelContext from './contexts/DestinationSelContext';\nimport DestPosContext from './contexts/DestPosContext';\nimport Chess  from './components/chess';\nfunction App() {\n\n  const [placed, setPlaced] = useState(false);\n  const [destSelected,setDest] = useState(false);\n  const [pos,setPos] = useState(-1);\n  const [destPos,setDestPos] = useState(-1);\n  return (\n    <div className=\"App\">\n      <DestPosContext.Provider value={{destPos,setDestPos}}>\n        <DestinationSelContext.Provider value ={{destSelected,setDest}}>\n          <KnightPlacedContext.Provider value = {{placed,setPlaced}}>\n            <KnightPosContext.Provider value = {{pos,setPos}}>\n              <BrowserRouter>\n                <Route exact path=\"/\" component={Chess} /> {}\n              </BrowserRouter>\n            </KnightPosContext.Provider>\n          </KnightPlacedContext.Provider>\n        </DestinationSelContext.Provider>\n      </DestPosContext.Provider>\n      \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\components\\chess.jsx",["52","53","54","55","56"],"import React, { useContext, useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Chessboard from 'chessboardjsx';\r\nimport Board from './board';\r\n\r\nfunction Chess(){\r\n    return (\r\n        <div>\r\n            <Board/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chess;","C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\components\\board.jsx",["57","58","59","60","61","62","63","64","65","66","67","68"],"import React, { useEffect,useContext,useState} from 'react';\r\nimport '../index.css';\r\nimport Knight from '../images/knight.svg'\r\nimport Square from './square';\r\nimport {Grid} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport KnightPlacedContext from '../contexts/KnightPlacedContext';\r\nimport KnightPosContext from '../contexts/KnightPosContext';\r\nimport DestinationSelContext from '../contexts/DestinationSelContext';\r\nimport chessPositions from '../constants';\r\nimport DestPosContext from '../contexts/DestPosContext';\r\n\r\nfunction useForceUpdate(){\r\n    const [value, setValue] = useState(0); // integer state\r\n    return () => setValue(value => value + 1); // update the state to force render\r\n}\r\n\r\nfunction Board(props){\r\n    const forceUpdate = useForceUpdate();\r\n    const [board,setBoard]= useState([]);\r\n    const {placed, setPlaced} = useContext(KnightPlacedContext);\r\n    const {pos,setPos} = useContext(KnightPosContext);\r\n    const {destSelected,setDest} = useContext(DestinationSelContext);\r\n    const {destPos,setDestPos} = useContext(DestPosContext);\r\n    const [boardInitialized,setBoardInitialized]=useState(false);\r\n    const isEven = (num)=>{\r\n        return num%2==0;\r\n    }\r\n\r\n    const possibleValueMoves=[];\r\n\r\n    const calc=()=>{\r\n        //calc possible positions\r\n        possiblePositions(pos);\r\n        console.log(board);\r\n        possibleValueMoves.forEach((val)=>{\r\n            //console.log(parseInt(val/8));\r\n            //console.log(board[(parseInt(val/8))].props.children[val%8]);\r\n            board[(parseInt(val/8))].props.children[val%8]=<Square value={val} color=\"square-selected \" onClicked={onClickedFunc}></Square>\r\n            console.log(board[(parseInt(val/8))].props.children[val%8]);\r\n            \r\n        })\r\n        //board[(parseInt(pos/8))].props.children[pos%8]=<Square value={val} color=\"square-selected \" style={backgroundImage: \"url('\"+Knight+\"')\"} onClicked={onClickedFunc}></Square>\r\n        let newBoard = [];\r\n        board.forEach((row) => {\r\n            newBoard.push(<div className=\"board-row\">{[...row.props.children]}</div>);\r\n        });\r\n        setBoard(newBoard);\r\n        //forceUpdate();\r\n        console.log(board);\r\n        \r\n    }\r\n    \r\n    const possiblePositions=(pos)=>{\r\n        if(pos-17>0){\r\n            possibleValueMoves.push(pos-17);\r\n        }\r\n        if(pos-15>0){\r\n            possibleValueMoves.push(pos-15);\r\n        }\r\n        if(pos-10>0){\r\n            possibleValueMoves.push(pos-10);\r\n        }\r\n        \r\n        if(pos-6>0){\r\n            possibleValueMoves.push(pos-6);\r\n        }\r\n\r\n        if(pos+6<63){\r\n            possibleValueMoves.push(pos+6);\r\n        }\r\n        if(pos+10<63){\r\n            possibleValueMoves.push(pos+10);\r\n        }\r\n        if(pos+15<63){\r\n            possibleValueMoves.push(pos+15);\r\n        }\r\n        if(pos+17<63){\r\n            possibleValueMoves.push(pos+17);\r\n        }\r\n        \r\n        console.log(possibleValueMoves);\r\n    }\r\n    const onClickedFunc=(value)=>{   \r\n        console.log(value);\r\n\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        if(!boardInitialized){\r\n            for(let i=0;i<8;i++){\r\n                const newRow=[]\r\n                for(let j=0;j<8;j++){\r\n                    const color = (isEven(i) && isEven(j))||(!isEven(i)&&!isEven(j)) ? \"light-square \" : \"dark-square \";\r\n                    newRow.push(<Square value={(i*8)+j} color={color} onClicked={onClickedFunc}></Square>);\r\n                }\r\n                board.push(<div className=\"board-row\">{newRow}</div>)\r\n                //console.log(board);\r\n            }\r\n            setBoardInitialized(true);\r\n            setBoard([...board]);\r\n        }\r\n        console.log(\"board was rerendered\");\r\n        console.log(board);\r\n    })\r\n    \r\n    \r\n    \r\n    return(\r\n        <div align=\"center\" style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'}}>\r\n            <div class=\"container\">\r\n                {board}\r\n                <Button variant=\"contained\" disabled={(destSelected && placed)?false:true} onClick={calc}>Calculate</Button>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n    \r\n    \r\n  \r\n}\r\n\r\nexport default Board;\r\n\r\n\r\n","C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\components\\square.jsx",["69","70"],"import React, { useContext,useState} from 'react';\r\nimport '../index.css';\r\nimport Knight from '../images/knight.svg'\r\nimport KnightPlacedContext from '../contexts/KnightPlacedContext';\r\nimport KnightPosContext from '../contexts/KnightPosContext';\r\nimport DestinationSelContext from '../contexts/DestinationSelContext';\r\nimport DestPosContext from '../contexts/DestPosContext';\r\n\r\nfunction Square(props){\r\n    const value = props.value;\r\n    const  {color} = props;\r\n    const  [style,setStyle] = useState({});\r\n    //const [highlight,setHighlight] = useState({});\r\n    const {placed, setPlaced} = useContext(KnightPlacedContext);\r\n    const {pos,setPos} = useContext(KnightPosContext);\r\n    const {destSelected,setDest} = useContext(DestinationSelContext);\r\n    const {destPos,setDestPos} = useContext(DestPosContext);\r\n    const selectSquare = ()=>{\r\n        if(placed && value===pos){\r\n            setStyle({}); \r\n            setPlaced(false);\r\n            setPos(-1);\r\n        }\r\n        else if(!placed){\r\n            setStyle({backgroundImage: \"url('\"+Knight+\"')\"});\r\n            setPlaced(true);\r\n            setPos(value);\r\n        }\r\n        else if(placed && !destSelected){\r\n            setDestPos(value);\r\n            setDest(true);\r\n            setStyle({opacity:'50%',backgroundColor:'red',borderColor:'blue',borderWidth:5});\r\n        }\r\n        else if(placed && destSelected){\r\n            \r\n        }\r\n        props.onClicked(props.value);\r\n\r\n    }\r\n    const clicked = {opacity:'50%',backgroundColor:'purple'}\r\n\r\n    return (\r\n        <button className={\"square \" + color }\r\n            onClick={selectSquare}\r\n            style={style }\r\n        >\r\n        </button>\r\n    );\r\n\r\n}\r\n\r\nexport default Square;","C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\contexts\\KnightPlacedContext.js",[],"C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\contexts\\KnightPosContext.js",[],"C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\contexts\\DestinationSelContext.js",[],"C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\contexts\\DestPosContext.js",[],"C:\\Users\\Pret\\Documents\\WebProjects\\chessproj\\src\\constants.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"79","line":2,"column":25,"nodeType":"77","messageId":"78","endLine":2,"endColumn":31},{"ruleId":"75","severity":1,"message":"80","line":2,"column":33,"nodeType":"77","messageId":"78","endLine":2,"endColumn":41},{"ruleId":"75","severity":1,"message":"81","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":27},{"ruleId":"75","severity":1,"message":"82","line":1,"column":29,"nodeType":"77","messageId":"78","endLine":1,"endColumn":37},{"ruleId":"75","severity":1,"message":"83","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":16},{"ruleId":"75","severity":1,"message":"84","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":20},{"ruleId":"75","severity":1,"message":"85","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":18},{"ruleId":"75","severity":1,"message":"86","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":14},{"ruleId":"75","severity":1,"message":"87","line":5,"column":9,"nodeType":"77","messageId":"78","endLine":5,"endColumn":13},{"ruleId":"75","severity":1,"message":"88","line":10,"column":8,"nodeType":"77","messageId":"78","endLine":10,"endColumn":22},{"ruleId":"75","severity":1,"message":"89","line":14,"column":12,"nodeType":"77","messageId":"78","endLine":14,"endColumn":17},{"ruleId":"75","severity":1,"message":"90","line":19,"column":11,"nodeType":"77","messageId":"78","endLine":19,"endColumn":22},{"ruleId":"75","severity":1,"message":"91","line":21,"column":20,"nodeType":"77","messageId":"78","endLine":21,"endColumn":29},{"ruleId":"75","severity":1,"message":"92","line":22,"column":16,"nodeType":"77","messageId":"78","endLine":22,"endColumn":22},{"ruleId":"75","severity":1,"message":"93","line":23,"column":25,"nodeType":"77","messageId":"78","endLine":23,"endColumn":32},{"ruleId":"75","severity":1,"message":"94","line":24,"column":12,"nodeType":"77","messageId":"78","endLine":24,"endColumn":19},{"ruleId":"75","severity":1,"message":"95","line":24,"column":20,"nodeType":"77","messageId":"78","endLine":24,"endColumn":30},{"ruleId":"96","severity":1,"message":"97","line":27,"column":21,"nodeType":"98","messageId":"99","endLine":27,"endColumn":23},{"ruleId":"100","severity":1,"message":"101","line":89,"column":5,"nodeType":"77","endLine":89,"endColumn":14,"suggestions":"102"},{"ruleId":"75","severity":1,"message":"94","line":17,"column":12,"nodeType":"77","messageId":"78","endLine":17,"endColumn":19},{"ruleId":"75","severity":1,"message":"103","line":40,"column":11,"nodeType":"77","messageId":"78","endLine":40,"endColumn":18},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Redirect' is defined but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'useHistory' is defined but never used.","'Chessboard' is defined but never used.","'Knight' is defined but never used.","'Grid' is defined but never used.","'chessPositions' is defined but never used.","'value' is assigned a value but never used.","'forceUpdate' is assigned a value but never used.","'setPlaced' is assigned a value but never used.","'setPos' is assigned a value but never used.","'setDest' is assigned a value but never used.","'destPos' is assigned a value but never used.","'setDestPos' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setBoardInitialized'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [boardInitialized, board] as a second argument to the useEffect Hook.",["106"],"'clicked' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Add dependencies array: [boardInitialized, board]",{"range":"109","text":"110"},[3779,3779],", [boardInitialized, board]"]